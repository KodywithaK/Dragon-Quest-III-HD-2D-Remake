[
  {
    "Type": "DataTable",
    "Name": "GOP_Text_BattleMenu",
    "Class": "UScriptClass'DataTable'",
    "Flags": "RF_Public | RF_Standalone | RF_Transactional | RF_WasLoaded | RF_LoadCompleted",
    "Properties": {
      "RowStruct": {
        "ObjectName": "ScriptStruct'GOP_Text_CommonTable'",
        "ObjectPath": "/Script/Nicola"
      }
    },
    "Rows": {
      "Txt_BattleMenu_Top_COMMAND_00": {
        "SelfId": "Txt_BattleMenu_Top_COMMAND_00",
        "Text": "Combat"
      },
      "Txt_BattleMenu_Top_COMMAND_01": {
        "SelfId": "Txt_BattleMenu_Top_COMMAND_01",
        "Text": "Tactique"
      },
      "Txt_BattleMenu_Top_COMMAND_02": {
        "SelfId": "Txt_BattleMenu_Top_COMMAND_02",
        "Text": "Fuir"
      },
      "Txt_BattleMenu_Top_MBR_COMMAND_00": {
        "SelfId": "Txt_BattleMenu_Top_MBR_COMMAND_00",
        "Text": "Combat"
      },
      "Txt_BattleMenu_Top_MBR_COMMAND_01": {
        "SelfId": "Txt_BattleMenu_Top_MBR_COMMAND_01",
        "Text": "Tactique"
      },
      "Txt_BattleMenu_Top_MBR_COMMAND_02": {
        "SelfId": "Txt_BattleMenu_Top_MBR_COMMAND_02",
        "Text": "Se rendre"
      },
      "Txt_BattleMenu_Top_SPEED": {
        "SelfId": "Txt_BattleMenu_Top_SPEED",
        "Text": "Vitesse"
      },
      "Txt_BattleMenu_Top_SPEED_Low": {
        "SelfId": "Txt_BattleMenu_Top_SPEED_Low",
        "Text": "Normale"
      },
      "Txt_BattleMenu_Top_SPEED_Medium": {
        "SelfId": "Txt_BattleMenu_Top_SPEED_Medium",
        "Text": "Rapide"
      },
      "Txt_BattleMenu_Top_SPEED_High": {
        "SelfId": "Txt_BattleMenu_Top_SPEED_High",
        "Text": "Ultra rapide"
      },
      "Txt_BattleMenu_Top_UI_OFF": {
        "SelfId": "Txt_BattleMenu_Top_UI_OFF",
        "Text": "Masquer l'interface"
      },
      "Txt_BattleMenu_Top_MBR_MATCH_Count": {
        "SelfId": "Txt_BattleMenu_Top_MBR_MATCH_Count",
        "Text": "Combat #{0}"
      },
      "Txt_BattleMenu_Fight_COMMAND_00": {
        "SelfId": "Txt_BattleMenu_Fight_COMMAND_00",
        "Text": "Attaque"
      },
      "Txt_BattleMenu_Fight_COMMAND_01": {
        "SelfId": "Txt_BattleMenu_Fight_COMMAND_01",
        "Text": "Sorts"
      },
      "Txt_BattleMenu_Fight_COMMAND_02": {
        "SelfId": "Txt_BattleMenu_Fight_COMMAND_02",
        "Text": "Défense"
      },
      "Txt_BattleMenu_Fight_COMMAND_03": {
        "SelfId": "Txt_BattleMenu_Fight_COMMAND_03",
        "Text": "Aptitudes"
      },
      "Txt_BattleMenu_Fight_COMMAND_04": {
        "SelfId": "Txt_BattleMenu_Fight_COMMAND_04",
        "Text": "Objets"
      },
      "Txt_BattleMenu_Fight_COMMAND_05": {
        "SelfId": "Txt_BattleMenu_Fight_COMMAND_05",
        "Text": "Équipement"
      },
      "Txt_BattleMenu_Fight_TARGET_VALUE": {
        "SelfId": "Txt_BattleMenu_Fight_TARGET_VALUE",
        "Text": "{0}"
      },
      "Txt_BattleMenu_Fight_UNKNOWN_MAGIC": {
        "SelfId": "Txt_BattleMenu_Fight_UNKNOWN_MAGIC",
        "Text": "???"
      },
      "Txt_BattleMenu_Fight_ITEMGUIDE": {
        "SelfId": "Txt_BattleMenu_Fight_ITEMGUIDE",
        "Text": "Choisir un objet à utiliser"
      },
      "Txt_BattleMenu_Fight_EQUIPGUIDE": {
        "SelfId": "Txt_BattleMenu_Fight_EQUIPGUIDE",
        "Text": "Choisir une pièce d'équipement"
      },
      "Txt_BattleMenu_Fight_SKILLGUIDE": {
        "SelfId": "Txt_BattleMenu_Fight_SKILLGUIDE",
        "Text": "Choisir une aptitude à utiliser"
      },
      "Txt_BattleMenu_Fight_MAGICGUIDE": {
        "SelfId": "Txt_BattleMenu_Fight_MAGICGUIDE",
        "Text": "Choisir un sort à lancer"
      },
      "Txt_BattleMenu_Fight_TACTICSGUIDE": {
        "SelfId": "Txt_BattleMenu_Fight_TACTICSGUIDE",
        "Text": "Choisir l'équipier pour changer sa tactique"
      },
      "Txt_BattleMenu_Fight_MBR_TACTICSGUIDE": {
        "SelfId": "Txt_BattleMenu_Fight_MBR_TACTICSGUIDE",
        "Text": "Choisir le monstre à qui changer la tactique"
      },
      "Txt_BattleMenu_Fight_ACCESSORIEGUIDE": {
        "SelfId": "Txt_BattleMenu_Fight_ACCESSORIEGUIDE",
        "Text": "Choisir où s'équiper de l'objet"
      },
      "Txt_BattleMenu_Fight_NOSKILL": {
        "SelfId": "Txt_BattleMenu_Fight_NOSKILL",
        "Text": "<Cap><DefSgl_ACTOR> ne connaît aucune aptitude utilisable en combat."
      },
      "Txt_BattleMenu_Fight_NOMAGIC": {
        "SelfId": "Txt_BattleMenu_Fight_NOMAGIC",
        "Text": "<Cap><DefSgl_ACTOR> ne connaît aucun sort utilisable en combat."
      },
      "Txt_BattleMenu_Fight_SKILLUNSKILLED": {
        "SelfId": "Txt_BattleMenu_Fight_SKILLUNSKILLED",
        "Text": "<Cap><DefSgl_ACTOR> n'a pas encore appris cette aptitude."
      },
      "Txt_BattleMenu_Fight_MAGICUNSKILLED": {
        "SelfId": "Txt_BattleMenu_Fight_MAGICUNSKILLED",
        "Text": "<Cap><DefSgl_ACTOR> n'a pas encore appris ce sort."
      },
      "Txt_BattleMenu_Fight_SEALMAGIC": {
        "SelfId": "Txt_BattleMenu_Fight_SEALMAGIC",
        "Text": "<Cap><DefSgl_ACTOR> ne peut pas lancer de sorts pour le moment."
      },
      "Txt_BattleMenu_Fight_NOITEM": {
        "SelfId": "Txt_BattleMenu_Fight_NOITEM",
        "Text": "{ACTOR} ne dispose d'aucun objet ou équipement utilisable en combat."
      },
      "Txt_BattleMenu_Fight_NOEQUIP": {
        "SelfId": "Txt_BattleMenu_Fight_NOEQUIP",
        "Text": "{ACTOR} ne dispose d'aucune pièce dont <IfGender_ACTOR(il,elle,)> peut s'équiper."
      },
      "Txt_BattleMenu_Fight_CANNOTEQUIP": {
        "SelfId": "Txt_BattleMenu_Fight_CANNOTEQUIP",
        "Text": "{ACTOR} ne peut pas changer d'équipement."
      },
      "Txt_BattleMenu_Fight_LOSSMP": {
        "SelfId": "Txt_BattleMenu_Fight_LOSSMP",
        "Text": "PM insuffisants!"
      },
      "Txt_BattleMenu_Fight_NOEFFECT": {
        "SelfId": "Txt_BattleMenu_Fight_NOEFFECT",
        "Text": "Cet objet n'a aucun effet ici."
      },
      "Txt_BattleMenu_Fight_EQUIP": {
        "SelfId": "Txt_BattleMenu_Fight_EQUIP",
        "Text": "{ACTOR} s'équipe <IfPlrNoun_I_NAME(de la ,<IfVowel_I_NAME(de l',<IfGender_I_NAME(du ,de la ,)>)>)><Sgl_I_NAME>."
      },
      "Txt_BattleMenu_Fight_UNEQUIP": {
        "SelfId": "Txt_BattleMenu_Fight_UNEQUIP",
        "Text": "{ACTOR} retire <DefSgl_I_NAME>."
      },
      "Txt_BattleMenu_Fight_EQUIPCANNOT": {
        "SelfId": "Txt_BattleMenu_Fight_EQUIPCANNOT",
        "Text": "{ACTOR} ne peut pas s'équiper <IfPlrNoun_I_NAME(de la ,<IfVowel_I_NAME(de l',<IfGender_I_NAME(du ,de la ,)>)>)><Sgl_I_NAME>."
      },
      "Txt_BattleMenu_Fight_CURSEUNEQUIP": {
        "SelfId": "Txt_BattleMenu_Fight_CURSEUNEQUIP",
        "Text": "<Cap><DefSgl_I_NAME> est un équipement maudit qui ne peut être retiré."
      },
      "Txt_BattleMenu_Fight_CURSEEQUIP": {
        "SelfId": "Txt_BattleMenu_Fight_CURSEEQUIP",
        "Text": "{ACTOR} est victime d'une malédiction!"
      },
      "Txt_BattleMenu_Fight_CANNOTResurre": {
        "SelfId": "Txt_BattleMenu_Fight_CANNOTResurre",
        "Text": "Mais il n'y a aucun allié à ressusciter."
      },
      "Txt_BattleMenu_Fight_CANNOTKabau": {
        "SelfId": "Txt_BattleMenu_Fight_CANNOTKabau",
        "Text": "Mais il n'y a actuellement personne à couvrir."
      },
      "Txt_BattleMenu_Fight_SELFKabau": {
        "SelfId": "Txt_BattleMenu_Fight_SELFKabau",
        "Text": "Il n'est pas possible de se couvrir soi-même, enfin!"
      },
      "Txt_BattleMenu_Fight_CANNOTRUN": {
        "SelfId": "Txt_BattleMenu_Fight_CANNOTRUN",
        "Text": "Impossible de fuir ce combat!"
      },
      "Txt_BattleMenu_Fight_CANNOTRUN_02": {
        "SelfId": "Txt_BattleMenu_Fight_CANNOTRUN_02",
        "Text": "Impossible de fuir pour le moment!"
      },
      "Txt_BattleMenu_Result_BeforeLevel": {
        "SelfId": "Txt_BattleMenu_Result_BeforeLevel",
        "Text": "{0}"
      },
      "Txt_BattleMenu_Result_AfterLevel": {
        "SelfId": "Txt_BattleMenu_Result_AfterLevel",
        "Text": "{0}"
      },
      "Txt_BattleMenu_Result_StatusChange": {
        "SelfId": "Txt_BattleMenu_Result_StatusChange",
        "Text": "{0}"
      },
      "Txt_BattleMenu_Result_GetMagic": {
        "SelfId": "Txt_BattleMenu_Result_GetMagic",
        "Text": "{ACTOR} a appris <IfSing_VALUE(un nouveau sort,de nouveaux sorts)>."
      },
      "Txt_BattleMenu_Result_GetSkill": {
        "SelfId": "Txt_BattleMenu_Result_GetSkill",
        "Text": "{ACTOR} a appris <IfSing_VALUE2(une nouvelle aptitude,de nouvelles aptitudes)>."
      },
      "Txt_BattleMenu_Result_GetMagicSkill": {
        "SelfId": "Txt_BattleMenu_Result_GetMagicSkill",
        "Text": "{ACTOR} a appris <IfSing_VALUE(un nouveau sort,de nouveaux sorts)> et <IfSing_VALUE2(une nouvelle aptitude,de nouvelles aptitudes)>."
      },
      "Txt_BattleMenu_Retry_Menu01": {
        "SelfId": "Txt_BattleMenu_Retry_Menu01",
        "Text": "Revanche"
      },
      "Txt_BattleMenu_Retry_Menu02": {
        "SelfId": "Txt_BattleMenu_Retry_Menu02",
        "Text": "Reprendre à la sauvegarde auto."
      },
      "Txt_BattleMenu_Retry_Menu03": {
        "SelfId": "Txt_BattleMenu_Retry_Menu03",
        "Text": "Reprendre depuis l'église"
      },
      "Txt_BattleMenu_Retry_Menu04": {
        "SelfId": "Txt_BattleMenu_Retry_Menu04",
        "Text": "Sélection du journal"
      },
      "Txt_BattleMenu_Retry_Church": {
        "SelfId": "Txt_BattleMenu_Retry_Church",
        "Text": "Endroit :"
      },
      "Txt_BattleMenu_Retry_Mapname": {
        "SelfId": "Txt_BattleMenu_Retry_Mapname",
        "Text": "{0}"
      },
      "Txt_BattleMenu_Retry_AfterGold_Topic": {
        "SelfId": "Txt_BattleMenu_Retry_AfterGold_Topic",
        "Text": "Pièces d'or à son retour :"
      },
      "Txt_BattleMenu_Retry_Time": {
        "SelfId": "Txt_BattleMenu_Retry_Time",
        "Text": "Heure actuelle :"
      },
      "Txt_BattleMenu_Suffix_Multiple": {
        "SelfId": "Txt_BattleMenu_Suffix_Multiple",
        "Text": "<ERROR!>"
      },
      "Txt_BattleMenu_Suffix_Various": {
        "SelfId": "Txt_BattleMenu_Suffix_Various",
        "Text": "<ERROR!>"
      },
      "Txt_BattleMenu_Suffix_00": {
        "SelfId": "Txt_BattleMenu_Suffix_00",
        "Text": "A"
      },
      "Txt_BattleMenu_Suffix_01": {
        "SelfId": "Txt_BattleMenu_Suffix_01",
        "Text": "B"
      },
      "Txt_BattleMenu_Suffix_02": {
        "SelfId": "Txt_BattleMenu_Suffix_02",
        "Text": "C"
      },
      "Txt_BattleMenu_Suffix_03": {
        "SelfId": "Txt_BattleMenu_Suffix_03",
        "Text": "D"
      },
      "Txt_BattleMenu_Suffix_04": {
        "SelfId": "Txt_BattleMenu_Suffix_04",
        "Text": "E"
      },
      "Txt_BattleMenu_Suffix_05": {
        "SelfId": "Txt_BattleMenu_Suffix_05",
        "Text": "F"
      },
      "Txt_BattleMenu_Suffix_06": {
        "SelfId": "Txt_BattleMenu_Suffix_06",
        "Text": "G"
      },
      "Txt_BattleMenu_Suffix_07": {
        "SelfId": "Txt_BattleMenu_Suffix_07",
        "Text": "H"
      },
      "Txt_BattleMenu_Suffix_08": {
        "SelfId": "Txt_BattleMenu_Suffix_08",
        "Text": "I"
      },
      "Txt_BattleMenu_Suffix_09": {
        "SelfId": "Txt_BattleMenu_Suffix_09",
        "Text": "J"
      },
      "Txt_BattleMenu_Suffix_10": {
        "SelfId": "Txt_BattleMenu_Suffix_10",
        "Text": "K"
      },
      "Txt_BattleMenu_Suffix_11": {
        "SelfId": "Txt_BattleMenu_Suffix_11",
        "Text": "L"
      },
      "Txt_BattleMenu_Suffix_12": {
        "SelfId": "Txt_BattleMenu_Suffix_12",
        "Text": "M"
      },
      "Txt_BattleMenu_Suffix_13": {
        "SelfId": "Txt_BattleMenu_Suffix_13",
        "Text": "N"
      },
      "Txt_BattleMenu_Suffix_14": {
        "SelfId": "Txt_BattleMenu_Suffix_14",
        "Text": "O"
      },
      "Txt_BattleMenu_Suffix_15": {
        "SelfId": "Txt_BattleMenu_Suffix_15",
        "Text": "P"
      },
      "Txt_BattleMenu_Action_Damage": {
        "SelfId": "Txt_BattleMenu_Action_Damage",
        "Text": "{0}"
      },
      "Txt_BattleMenu_Action_Heal": {
        "SelfId": "Txt_BattleMenu_Action_Heal",
        "Text": "{0}"
      },
      "Txt_BattleMenu_Action_Miss": {
        "SelfId": "Txt_BattleMenu_Action_Miss",
        "Text": "Raté"
      },
      "Txt_BattleMenu_Message_RunConfirm": {
        "SelfId": "Txt_BattleMenu_Message_RunConfirm",
        "Text": "Fuir ce combat?"
      },
      "Txt_BattleMenu_Message_MBR_RunConfirm": {
        "SelfId": "Txt_BattleMenu_Message_MBR_RunConfirm",
        "Text": "Vous perdrez la somme que vous avez mise en jeu si vous déclarez forfait maintenant! Souhaitez-vous vraiment jeter l'éponge?"
      },
      "Txt_BattleMenu_Message_SPHERE_OF_LIGHT": {
        "SelfId": "Txt_BattleMenu_Message_SPHERE_OF_LIGHT",
        "Text": "La sphère de lumière léguée par la reine Dragon se met à briller!\r\nSouhaitez-vous l'utiliser?"
      },
      "Txt_BattleMenu_Message_Deffence": {
        "SelfId": "Txt_BattleMenu_Message_Deffence",
        "Text": "<Cap><DefSgl_ACTOR> se défend."
      },
      "Txt_BattleMenu_Message_AppearSingle": {
        "SelfId": "Txt_BattleMenu_Message_AppearSingle",
        "Text": "<Cap><IfSing_VALUE3(<IndefSgl_M_NAME> apparaît,<IndefPlr_M_NAME> apparaissent)>!"
      },
      "Txt_BattleMenu_Message_AppearVarious": {
        "SelfId": "Txt_BattleMenu_Message_AppearVarious",
        "Text": "Un groupe d'ennemis apparaît!"
      },
      "Txt_BattleMenu_Message_FirstAttackSingle_01": {
        "SelfId": "Txt_BattleMenu_Message_FirstAttackSingle_01",
        "Text": "Mais <IfSing_VALUE3(<DefSgl_M_NAME> est trop <IfGender_M_NAME(abasourdi,abasourdie,)>,<DefPlr_M_NAME> sont trop <IfGender_M_NAME(abasourdis,abasourdies,)>)> pour bouger!"
      },
      "Txt_BattleMenu_Message_FirstAttackVarious_01": {
        "SelfId": "Txt_BattleMenu_Message_FirstAttackVarious_01",
        "Text": "Mais ils sont trop abasourdis pour bouger!"
      },
      "Txt_BattleMenu_Message_FirstAttackSingle_02": {
        "SelfId": "Txt_BattleMenu_Message_FirstAttackSingle_02",
        "Text": "Mais <IfSing_VALUE3(<DefSgl_M_NAME> ne remarque,<DefPlr_M_NAME> ne remarquent)> pas la présence <IfSolo(<IfVowel_LEADER(d',de )>{LEADER},de l'équipe)>!"
      },
      "Txt_BattleMenu_Message_FirstAttackVarious_02": {
        "SelfId": "Txt_BattleMenu_Message_FirstAttackVarious_02",
        "Text": "Mais ils ne remarquent pas la présence <IfSolo(<IfVowel_LEADER(d',de )>{LEADER},de l'équipe)>!"
      },
      "Txt_BattleMenu_Message_FirstAttackedSingle_Hero": {
        "SelfId": "Txt_BattleMenu_Message_FirstAttackedSingle_Hero",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_M_NAME> porte,<DefPlr_M_NAME> portent)> le premier coup\r\navant <IfSolo(<IfVowel_LEADER(qu',que )>{LEADER},que l'équipe)> ait pu se préparer!"
      },
      "Txt_BattleMenu_Message_FirstAttackedVarious_Hero": {
        "SelfId": "Txt_BattleMenu_Message_FirstAttackedVarious_Hero",
        "Text": "Le groupe d'ennemis porte le premier coup\r\navant <IfSolo(<IfVowel_LEADER(qu',que )>{LEADER},que l'équipe)> ait pu se préparer!"
      },
      "Txt_BattleMenu_Message_FirstAttackedSingle_02": {
        "SelfId": "Txt_BattleMenu_Message_FirstAttackedSingle_02",
        "Text": "Soudain, <IfSing_VALUE3(<DefSgl_M_NAME> attaque,<DefPlr_M_NAME> attaquent)>!"
      },
      "Txt_BattleMenu_Message_FirstAttackedVarious_02": {
        "SelfId": "Txt_BattleMenu_Message_FirstAttackedVarious_02",
        "Text": "Soudain, le groupe d'ennemis attaque!"
      },
      "Txt_BattleMenu_Message_RunChallenge_Hero": {
        "SelfId": "Txt_BattleMenu_Message_RunChallenge_Hero",
        "Text": "<IfSolo({LEADER},L'équipe)> fuit le combat!"
      },
      "Txt_BattleMenu_Message_RunFailure": {
        "SelfId": "Txt_BattleMenu_Message_RunFailure",
        "Text": "Mais l'ennemi bloque le passage!"
      },
      "Txt_BattleMenu_Message_DefeatSingle": {
        "SelfId": "Txt_BattleMenu_Message_DefeatSingle",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_M_NAME> est <IfGender_M_NAME(vaincu,vaincue,)>,<DefPlr_M_NAME> sont <IfGender_M_NAME(vaincus,vaincues,)>)>!"
      },
      "Txt_BattleMenu_Message_DefeatVarious": {
        "SelfId": "Txt_BattleMenu_Message_DefeatVarious",
        "Text": "Le groupe d'ennemis est vaincu!"
      },
      "Txt_BattleMenu_Message_VanishSingle": {
        "SelfId": "Txt_BattleMenu_Message_VanishSingle",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_M_NAME> disparaît,<DefPlr_M_NAME> disparaissent)>."
      },
      "Txt_BattleMenu_Message_VanishVarious": {
        "SelfId": "Txt_BattleMenu_Message_VanishVarious",
        "Text": "Le groupe d'ennemis disparaît."
      },
      "Txt_BattleMenu_Message_Lose_Hero": {
        "SelfId": "Txt_BattleMenu_Message_Lose_Hero",
        "Text": "Oh non! {LEADER} est <IfGender_LEADER(mort,morte,)>!<WAIT>[3]"
      },
      "Txt_BattleMenu_Message_Lose_Party": {
        "SelfId": "Txt_BattleMenu_Message_Lose_Party",
        "Text": "L'équipe est anéantie!<WAIT>[3]"
      },
      "Txt_BattleMenu_Message_DamageSingle": {
        "SelfId": "Txt_BattleMenu_Message_DamageSingle",
        "Text": "{VALUE}<nbsp><IfFRSing_VALUE(point,points)> de dégâts sur <DefSgl_TARGET>!"
      },
      "Txt_BattleMenu_Message_DamageMultiple": {
        "SelfId": "Txt_BattleMenu_Message_DamageMultiple",
        "Text": "Environ {VALUE}<nbsp><IfFRSing_VALUE(point,points)> de dégâts\r\nsur le groupe d'ennemis!"
      },
      "Txt_BattleMenu_Message_DamageContinuous": {
        "SelfId": "Txt_BattleMenu_Message_DamageContinuous",
        "Text": "Un total de {VALUE}<nbsp><IfFRSing_VALUE(point,points)> de dégâts sur <DefSgl_TARGET>!"
      },
      "Txt_BattleMenu_Message_DamagedSingle": {
        "SelfId": "Txt_BattleMenu_Message_DamagedSingle",
        "Text": "<DefSgl_TARGET> subit {VALUE} <IfFRSing_VALUE(point,points)> de dégâts!"
      },
      "Txt_BattleMenu_Message_DamagedMultiple": {
        "SelfId": "Txt_BattleMenu_Message_DamagedMultiple",
        "Text": "Les membres de l'équipe subissent\r\nenviron {VALUE}<nbsp><IfFRSing_VALUE(point,points)> de dégâts!"
      },
      "Txt_BattleMenu_Message_CriticalAttack": {
        "SelfId": "Txt_BattleMenu_Message_CriticalAttack",
        "Text": "Coup critique!"
      },
      "Txt_BattleMenu_Message_CriticalAttacked": {
        "SelfId": "Txt_BattleMenu_Message_CriticalAttacked",
        "Text": "Coup brutal!"
      },
      "Txt_BattleMenu_Message_NONETARGET": {
        "SelfId": "Txt_BattleMenu_Message_NONETARGET",
        "Text": "Mais le coup est porté dans le vide."
      },
      "Txt_BattleMenu_Message_MISS": {
        "SelfId": "Txt_BattleMenu_Message_MISS",
        "Text": "Raté!\r\n<Cap><IfSing_VALUE3(<DefSgl_TARGET>,Le groupe d'ennemis)> ne prend aucun dégât!"
      },
      "Txt_BattleMenu_Message_MISSED": {
        "SelfId": "Txt_BattleMenu_Message_MISSED",
        "Text": "Raté!\r\n<Cap><IfSing_VALUE3(<DefSgl_TARGET> ne subit aucun dégât, Personne ne subit de dégâts)>!"
      },
      "Txt_BattleMenu_Message_NOEFFECT": {
        "SelfId": "Txt_BattleMenu_Message_NOEFFECT",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> n'est pas <IfGender_TARGET(affecté,affectée,)>, Le groupe d'ennemi n'est pas affecté)>!"
      },
      "Txt_BattleMenu_Message_NOEFFECTED": {
        "SelfId": "Txt_BattleMenu_Message_NOEFFECTED",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> n'est pas <IfGender_TARGET(affecté,affectée,)>, L'équipe n'est pas affectée)>!"
      },
      "Txt_BattleMenu_Message_Avoid": {
        "SelfId": "Txt_BattleMenu_Message_Avoid",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET>,L'équipe)> esquive avec souplesse!"
      },
      "Txt_BattleMenu_Message_Avoid_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Avoid_Enemy",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET>,Le groupe de monstres)> esquive avec souplesse!"
      },
      "Txt_BattleMenu_Message_Death": {
        "SelfId": "Txt_BattleMenu_Message_Death",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> est <IfGender_TARGET(mort,morte,)>,Plusieurs membres de l'équipe sont morts)>!"
      },
      "Txt_BattleMenu_Message_Defeat": {
        "SelfId": "Txt_BattleMenu_Message_Defeat",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> est <IfGender_TARGET(vaincu,vaincue,)>,Plusieurs ennemis sont vaincus)>!"
      },
      "Txt_BattleMenu_Message_SpecialResult_01": {
        "SelfId": "Txt_BattleMenu_Message_SpecialResult_01",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_M_NAME> disparaît,<DefPlr_M_NAME> disparaissent)> à l'horizon."
      },
      "Txt_BattleMenu_Message_SpecialResult_02": {
        "SelfId": "Txt_BattleMenu_Message_SpecialResult_02",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_LEADER>,L'équipe)> est à bout de forces!"
      },
      "Txt_BattleMenu_Message_GetEXPGold_Party": {
        "SelfId": "Txt_BattleMenu_Message_GetEXPGold_Party",
        "Text": "Chaque membre de l'équipe reçoit {VALUE}<nbsp><IfSing_VALUE(point,points)> d'expérience!\r\nL'équipe reçoit {VALUE2}<nbsp><IfSing_VALUE(pièce,pièces)> d'or!"
      },
      "Txt_BattleMenu_Message_GetEXPGold_Hero": {
        "SelfId": "Txt_BattleMenu_Message_GetEXPGold_Hero",
        "Text": "{ACTOR} reçoit {VALUE}<nbsp><IfSing_VALUE(point,points)> d'expérience!\r\n{ACTOR} reçoit {VALUE2}<nbsp><IfSing_VALUE(pièce,pièces)> d'or!"
      },
      "Txt_BattleMenu_Message_GetEXP_Party": {
        "SelfId": "Txt_BattleMenu_Message_GetEXP_Party",
        "Text": "Chaque membre de l'équipe reçoit {VALUE}<nbsp><IfSing_VALUE(point,points)> d'expérience!"
      },
      "Txt_BattleMenu_Message_GetEXP_Hero": {
        "SelfId": "Txt_BattleMenu_Message_GetEXP_Hero",
        "Text": "{ACTOR} reçoit {VALUE}<nbsp><IfSing_VALUE(point,points)> d'expérience!"
      },
      "Txt_BattleMenu_Message_GetGold": {
        "SelfId": "Txt_BattleMenu_Message_GetGold",
        "Text": "{LEADER} reçoit {VALUE2} <nbsp><IfSing_VALUE2(pièce,pièces)> d'or!"
      },
      "Txt_BattleMenu_Message_LevelUp": {
        "SelfId": "Txt_BattleMenu_Message_LevelUp",
        "Text": "{ACTOR} atteint le niveau {VALUE}!"
      },
      "Txt_BattleMenu_Message_SkillGet": {
        "SelfId": "Txt_BattleMenu_Message_SkillGet",
        "Text": "{ACTOR} apprend une nouvelle aptitude du monstre!"
      },
      "Txt_BattleMenu_Message_GetItem_01": {
        "SelfId": "Txt_BattleMenu_Message_GetItem_01",
        "Text": "<Cap><DefSgl_M_NAME> laisse tomber un coffre au trésor!"
      },
      "Txt_BattleMenu_Message_GetItem_02": {
        "SelfId": "Txt_BattleMenu_Message_GetItem_02",
        "Text": "{LEADER} l'ouvre..."
      },
      "Txt_BattleMenu_Message_GetItem_03": {
        "SelfId": "Txt_BattleMenu_Message_GetItem_03",
        "Text": "Il y a <IndefSgl_I_NAME>!"
      },
      "Txt_BattleMenu_Message_GetItem_04": {
        "SelfId": "Txt_BattleMenu_Message_GetItem_04",
        "Text": "{ACTOR} récupère <DefSgl_I_NAME>."
      },
      "Txt_BattleMenu_Message_GetItem_05": {
        "SelfId": "Txt_BattleMenu_Message_GetItem_05",
        "Text": "<Cap><DefSgl_I_NAME> va dans <DefSgl_BAG>."
      },
      "Txt_BattleMenu_Message_GetItem_Thief": {
        "SelfId": "Txt_BattleMenu_Message_GetItem_Thief",
        "Text": "{ACTOR} vole <IndefSgl_I_NAME>!"
      },
      "Txt_BattleMenu_Message_GetGold_Marchant": {
        "SelfId": "Txt_BattleMenu_Message_GetGold_Marchant",
        "Text": "{ACTOR} trouve également {VALUE}<nbsp><IfSing_VALUE(pièce,pièces)> d'or!"
      },
      "Txt_BattleMenu_Message_GetGold_Marchant_Multipul": {
        "SelfId": "Txt_BattleMenu_Message_GetGold_Marchant_Multipul",
        "Text": "{ACTOR} trouve également {VALUE}<nbsp><IfSing_VALUE(pièce,pièces)> d'or!"
      },
      "Txt_BattleMenu_Message_BASHIRURA": {
        "SelfId": "Txt_BattleMenu_Message_BASHIRURA",
        "Text": "{ACTOR} est de retour!"
      },
      "Txt_BattleMenu_Message_BASHIRURA_Multipul": {
        "SelfId": "Txt_BattleMenu_Message_BASHIRURA_Multipul",
        "Text": "{ACTOR} et cie sont de retour!"
      },
      "Txt_BattleMenu_Message_Sleep_": {
        "SelfId": "Txt_BattleMenu_Message_Sleep_",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_ACTOR> est <IfGender_ACTOR(endormi,endormie,)>,Plusieurs membres de l'équipe sont endormis)>!"
      },
      "Txt_BattleMenu_Message_Sleep__Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Sleep__Enemy",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_ACTOR> est <IfGender_ACTOR(endormi,endormie,)>,Le groupe d'ennemis est endormi)>!"
      },
      "Txt_BattleMenu_Message_Sleep_Recover": {
        "SelfId": "Txt_BattleMenu_Message_Sleep_Recover",
        "Text": "<IfSing_VALUE3(<Cap><DefSgl_ACTOR> se réveille,Plusieurs membres de l'équipe se réveillent)>!"
      },
      "Txt_BattleMenu_Message_Sleep_Recover_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Sleep_Recover_Enemy",
        "Text": "<IfSing_VALUE3(<Cap><DefSgl_ACTOR>,Le groupe d'ennemis)> se réveille!"
      },
      "Txt_BattleMenu_Message_Sleep_Recover_Impact": {
        "SelfId": "Txt_BattleMenu_Message_Sleep_Recover_Impact",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> est <IfGender_TARGET(réveillé,réveillée,)>,Plusieurs membres de l'équipe sont réveillés)> par l'attaque!"
      },
      "Txt_BattleMenu_Message_Sleep_Recover_Impact_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Sleep_Recover_Impact_Enemy",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> est <IfGender_TARGET(réveillé,réveillée,)>,Le groupe d'ennemis est réveillé)> par l'attaque!"
      },
      "Txt_BattleMenu_Message_Sleep_Recover_Attacked": {
        "SelfId": "Txt_BattleMenu_Message_Sleep_Recover_Attacked",
        "Text": "<IfSing_VALUE3(<Cap><DefSgl_TARGET> se réveille,Plusieurs membres de l'équipe se réveillent)>!"
      },
      "Txt_BattleMenu_Message_Sleep_Recover_Attacked_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Sleep_Recover_Attacked_Enemy",
        "Text": "<IfSing_VALUE3(<Cap><DefSgl_TARGET>,Le groupe d'ennemis)> se réveille!"
      },
      "Txt_BattleMenu_Message_Sleep_Success_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Sleep_Success_Enemy",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> se fait endormir,Plusieurs ennemis se font endormir)>!"
      },
      "Txt_BattleMenu_Message_Sleep_Success_Friend": {
        "SelfId": "Txt_BattleMenu_Message_Sleep_Success_Friend",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> s'endort,Plusieurs membres de l'équipe s'endorment)>!"
      },
      "Txt_BattleMenu_Message_Sleep_Failure": {
        "SelfId": "Txt_BattleMenu_Message_Sleep_Failure",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET>,L'équipe)> ne s'endort pas!"
      },
      "Txt_BattleMenu_Message_Sleep_Failure_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Sleep_Failure_Enemy",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET>,Le groupe d'ennemis)> ne s'endort pas!"
      },
      "Txt_BattleMenu_Message_Confusion": {
        "SelfId": "Txt_BattleMenu_Message_Confusion",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_ACTOR> est <IfGender_ACTOR(désorienté,désorientée,)>,Plusieurs membres de l'équipe sont désorientés)>!"
      },
      "Txt_BattleMenu_Message_Confusion_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Confusion_Enemy",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_ACTOR> est <IfGender_ACTOR(désorienté,désorientée,)>,Plusieurs ennemis sont désorientés)>!"
      },
      "Txt_BattleMenu_Message_Confusion_Success": {
        "SelfId": "Txt_BattleMenu_Message_Confusion_Success",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> est <IfGender_TARGET(désorienté,désorientée,)>,Plusieurs membres de l'équipe sont désorientés)>!"
      },
      "Txt_BattleMenu_Message_Confusion_Success_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Confusion_Success_Enemy",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> est <IfGender_TARGET(désorienté,désorientée,)>,Plusieurs ennemis sont désorientés)>!"
      },
      "Txt_BattleMenu_Message_Confusion_Recover": {
        "SelfId": "Txt_BattleMenu_Message_Confusion_Recover",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET>,L'équipe)> reprend ses esprits."
      },
      "Txt_BattleMenu_Message_Confusion_Recover_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Confusion_Recover_Enemy",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET>,Le groupe d'ennemis)> reprend ses esprits."
      },
      "Txt_BattleMenu_Message_Confusion_Recover_Impact": {
        "SelfId": "Txt_BattleMenu_Message_Confusion_Recover_Impact",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET>,L'équipe)> reprend ses esprits suite au coup."
      },
      "Txt_BattleMenu_Message_Confusion_Recover_Impact_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Confusion_Recover_Impact_Enemy",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET>,Le groupe d'ennemis)> reprend ses esprits suite au coup."
      },
      "Txt_BattleMenu_Message_Paralysis": {
        "SelfId": "Txt_BattleMenu_Message_Paralysis",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_ACTOR> est <IfGender_ACTOR(paralysé,paralysée,)>,L'équipe est paralysée)> et ne peut plus agir!"
      },
      "Txt_BattleMenu_Message_Paralysis_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Paralysis_Enemy",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> est <IfGender_TARGET(paralysé,paralysée,)> et ne peut,Plusieurs ennemis sont paralysés et ne peuvent)> plus agir!"
      },
      "Txt_BattleMenu_Message_Paralysis_Success": {
        "SelfId": "Txt_BattleMenu_Message_Paralysis_Success",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> est <IfGender_TARGET(paralysé,paralysée,)>,Plusieurs membres de l'équipe sont paralysés)>!"
      },
      "Txt_BattleMenu_Message_Paralysis_Success_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Paralysis_Success_Enemy",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> est <IfGender_TARGET(paralysé,paralysée,)>,Plusieurs ennemis sont paralysés)>!"
      },
      "Txt_BattleMenu_Message_Paralysis_Avoid": {
        "SelfId": "Txt_BattleMenu_Message_Paralysis_Avoid",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET>,L'équipe)> évite l'haleine fétide!"
      },
      "Txt_BattleMenu_Message_Paralysis_Avoid_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Paralysis_Avoid_Enemy",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET>,Le groupe d'ennemis)> évite l'haleine fétide!"
      },
      "Txt_BattleMenu_Message_Paralysis_Recover": {
        "SelfId": "Txt_BattleMenu_Message_Paralysis_Recover",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> n'est plus <IfGender_TARGET(paralysé,paralysée,)>,L'équipe n'est plus paralysée)>!"
      },
      "Txt_BattleMenu_Message_Paralysis_Recover_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Paralysis_Recover_Enemy",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> n'est plus <IfGender_TARGET(paralysé,paralysée,)>,Le groupe d'ennemis n'est plus paralysé)>!"
      },
      "Txt_BattleMenu_Message_Poison_Success": {
        "SelfId": "Txt_BattleMenu_Message_Poison_Success",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> est <IfGender_TARGET(empoisonné,empoisonnée,)>,Plusieurs membres de l'équipe sont empoisonnés)>!"
      },
      "Txt_BattleMenu_Message_Poison_Recover_01": {
        "SelfId": "Txt_BattleMenu_Message_Poison_Recover_01",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> n'est plus <IfGender_TARGET(empoisonné,empoisonnée,)>,L'équipe n'est plus empoisonnée)>!"
      },
      "Txt_BattleMenu_Message_Poison_Recover_02_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Poison_Recover_02_Enemy",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET> n'est plus <IfGender_TARGET(empoisonné,empoisonnée,)>,Le groupe d'ennemis n'est plus empoisonné)>!"
      },
      "Txt_BattleMenu_Message_Curse": {
        "SelfId": "Txt_BattleMenu_Message_Curse",
        "Text": "<Cap><DefSgl_ACTOR> ne peut plus bouger sous l'effet de la malédiction!"
      },
      "Txt_BattleMenu_Message_Magic": {
        "SelfId": "Txt_BattleMenu_Message_Magic",
        "Text": "<Cap><DefSgl_ACTOR> lance {S_NAME}!"
      },
      "Txt_BattleMenu_Message_LackMP": {
        "SelfId": "Txt_BattleMenu_Message_LackMP",
        "Text": "Pas assez de PM!"
      },
      "Txt_BattleMenu_Message_MPDecrease": {
        "SelfId": "Txt_BattleMenu_Message_MPDecrease",
        "Text": "Les PM <IfVowel_TARGET(d',de )>{TARGET} diminuent de {VALUE}!"
      },
      "Txt_BattleMenu_Message_MPDecrease_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_MPDecrease_Enemy",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET>,Le groupe d'ennemis)> perd {VALUE}<nbsp>PM!"
      },
      "Txt_BattleMenu_Message_MPHeal": {
        "SelfId": "Txt_BattleMenu_Message_MPHeal",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET>,L'équipe)> récupère des PM!"
      },
      "Txt_BattleMenu_Message_Heal": {
        "SelfId": "Txt_BattleMenu_Message_Heal",
        "Text": "Les blessures <IfSing_VALUE3(<IfVowel_TARGET(d',de )>{TARGET},de l'équipe)> guérissent!"
      },
      "Txt_BattleMenu_Message_Heal_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_Heal_Enemy",
        "Text": "Les blessures <IfSing_VALUE3(<IfProperNoun_TARGET(<IfVowel_TARGET(d',de )>,<IfVowel_TARGET(de l',<IfGender_TARGET(du ,de la ,)>)>)>{TARGET},du groupe d'ennemis)> guérissent!"
      },
      "Txt_BattleMenu_Message_UseItem_01": {
        "SelfId": "Txt_BattleMenu_Message_UseItem_01",
        "Text": "<Cap><DefSgl_ACTOR> utilise <DefSgl_I_NAME>."
      },
      "Txt_BattleMenu_Message_Invalid": {
        "SelfId": "Txt_BattleMenu_Message_Invalid",
        "Text": "Mais rien ne se passe!"
      },
      "Txt_BattleMenu_Message_Run": {
        "SelfId": "Txt_BattleMenu_Message_Run",
        "Text": "<Cap><IfSing_VALUE3(<DefSgl_TARGET>,Le groupe d'ennemis)> s'enfuit!"
      },
      "Txt_BattleMenu_Message_NoEffected_Asutoron_Enemy": {
        "SelfId": "Txt_BattleMenu_Message_NoEffected_Asutoron_Enemy",
        "Text": "Le corps d'acier <IfSing_VALUE3(<IfProperNoun_TARGET(<IfVowel_TARGET(d',de )>,<IfVowel_TARGET(de l',<IfGender_TARGET(du ,de la ,)>)>)>{TARGET}, du groupe d'ennemis)> n'est pas affecté."
      },
      "Txt_BattleMenu_MBR_Message_Win": {
        "SelfId": "Txt_BattleMenu_MBR_Message_Win",
        "Text": "Bravo!\r\nVotre équipe a gagné!"
      },
      "Txt_BattleMenu_MBR_Message_Lose": {
        "SelfId": "Txt_BattleMenu_MBR_Message_Lose",
        "Text": "Aïe, votre équipe a été balayée..."
      },
      "Txt_BattleMenu_MBR_Message_Surrender": {
        "SelfId": "Txt_BattleMenu_MBR_Message_Surrender",
        "Text": "Vous décidez de vous rendre avant que cela n'empire..."
      },
      "Txt_BattleMenu_Retry_Message_Retry": {
        "SelfId": "Txt_BattleMenu_Retry_Message_Retry",
        "Text": "Continuer au début du dernier combat."
      },
      "Txt_BattleMenu_Retry_Message_AutoSave": {
        "SelfId": "Txt_BattleMenu_Retry_Message_AutoSave",
        "Text": "Reprendre à partir de la sauvegarde automatique la plus récente."
      },
      "Txt_BattleMenu_Retry_Message_AutoSaveNone": {
        "SelfId": "Txt_BattleMenu_Retry_Message_AutoSaveNone",
        "Text": "Vous n'avez pas de sauvegarde automatique actuellement."
      },
      "Txt_BattleMenu_Retry_Message_Church": {
        "SelfId": "Txt_BattleMenu_Retry_Message_Church",
        "Text": "Reprendre à partir de la dernière sauvegarde.\r\n(Vous perdrez {VALUE}<nbsp><IfSing_VALUE(pièce,pièces)> d'or.)"
      },
      "Txt_BattleMenu_Retry_Message_BackTitle": {
        "SelfId": "Txt_BattleMenu_Retry_Message_BackTitle",
        "Text": "Retourner au menu de sélection de journal.\r\n(Toute progression non sauvegardée sera perdue.)"
      },
      "Txt_BattleMenu_Retry_Message_Confirm": {
        "SelfId": "Txt_BattleMenu_Retry_Message_Confirm",
        "Text": "Recommencer l'aventure sous ces conditions?<NO_INPUT>"
      },
      "Txt_BattleMenu_Retry_Message_BackConfirm": {
        "SelfId": "Txt_BattleMenu_Retry_Message_BackConfirm",
        "Text": "Souhaitez-vous vraiment retourner au menu de sélection de journal?\r\n(Toute progression non sauvegardée sera perdue.)<NO_INPUT>"
      },
      "Txt_BattleMenu_Retry_Message_DataNone": {
        "SelfId": "Txt_BattleMenu_Retry_Message_DataNone",
        "Text": "Vous n'avez pas de sauvegarde automatique actuellement."
      },
      "Txt_BattleMenu_Retry_Message_DataBroken": {
        "SelfId": "Txt_BattleMenu_Retry_Message_DataBroken",
        "Text": "Impossible de charger la sauvegarde automatique.\r\nVeuillez continuer l'aventure d'une autre façon."
      }
    }
  }
]